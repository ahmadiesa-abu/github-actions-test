name: execute cloudify command from PR comment
on:
  issue_comment:
    types: [created]
jobs:
  run-command:
    runs-on: ubuntu-latest
    environment: 'test'
    steps:
      - id: format_comment
        name: Check if comment starts with cfy and remove it
        shell: python
        run: |
          comment = ${{ github.event.comment.body }}
          comment = comment.strip()
          if comment.startswith('cfy'):
            comment = comment.replace('cfy', '', 1)
          print ('::set-output name=command::{0}'.format(comment))

      - id: execute_command
        name: Execute cloudify command from comment
        if: ${{ github.event.issue.pull_request }}
        uses: ahmadiesa-abu/cli-action@v1.0.1
        with:
          command: ${{steps.check_comment.outputs.cli-output}}

      - id: format_command
        name: format command output
        shell: python
        run: |
          cli_output = ${{steps.execute_command.outputs.cli-output}}
          cli_output = cli_output.decode()
          cli_output = cli_output.replace('%','%25')
          cli_output = cli_output.replace('\n','%0A')
          cli_output = cli_output.replace('\r','%0D')
          print ('::set-output name=cli-output::{0}'.format(cli_output))

      - name: add comment
        id: comment
        uses: actions/github-script@v3
        env:
          COMMENT: "${{ steps.format_command.outputs.cli-output }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Command Result

            <details><summary>Show Result</summary>

            \`\`\`\n
            ${process.env.COMMENT}
            \`\`\`
            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

env:
  CLOUDIFY_HOST: ${{ secrets.CLOUDIFY_HOST }}
  CLOUDIFY_USERNAME: ${{ secrets.CLOUDIFY_USERNAME }}
  CLOUDIFY_PASSWORD: ${{ secrets.CLOUDIFY_PASSWORD }}
  CLOUDIFY_TENANT: default_tenant
  CLOUDIFY_SSL: ${{ secrets.CLOUDIFY_SSL }}
  CLOUDIFY_SSL_TRUST_ALL: ${{ secrets.CLOUDIFY_SSL_TRUST_ALL }}
